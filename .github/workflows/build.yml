name: Deploy to timestamped release and update latest

on:
  push:
    branches:
      - main
    paths:
      - 'src/manifest.json'

permissions:
  contents: write 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        env:
          TZ: Asia/Seoul

      - name: Set timestamp tag
        id: time
        run: |
          export TZ=Asia/Seoul
          echo "tag=Release-$(date +'%y%m%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Create timestamp tag (for release)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.time.outputs.tag }}
          git push origin ${{ steps.time.outputs.tag }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.time.outputs.tag }}
          name: ${{ steps.time.outputs.tag }}
          files: |
            dist/summar.zip
            dist/manifest.json

      - name: Update latest tag to point to this commit
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.sha;
            const ref = 'tags/latest';

            try {
              await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref,
              });

              await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref,
                sha,
                force: true,
              });
              console.log('Updated tag: latest');
            } catch (error) {
              if (error.status === 404) {
                await github.rest.git.createRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `refs/${ref}`,
                  sha,
                });
                console.log('Created tag: latest');
              } else {
                throw error;
              }
            }
